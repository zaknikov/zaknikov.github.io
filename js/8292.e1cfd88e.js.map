{"version":3,"file":"js/8292.e1cfd88e.js","mappings":"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","sources":["webpack://orbital/./src/stores/appData.js","webpack://orbital/./src/stores/capture.js","webpack://orbital/./src/stores/regions.js","webpack://orbital/./src/utils/helpers.js","webpack://orbital/./src/utils/hsDetailsTransition.js"],"sourcesContent":["import { defineStore } from 'pinia';\n\nimport { ref } from \"vue\";\n\nimport APP_DATA  from \"@/assets/appData.json\";\n\nexport const useAppDataStore = defineStore('appData', () => {\n\n    const params = ref(APP_DATA.params);\n    const hsParams = ref(APP_DATA.hotspots);\n    const defaultFilters = ref(hsParams.value.default_filters);\n    const defaultStatus = ref(defaultFilters.value.status);\n    const status = ref(hsParams.value.status);\n    const surfaceMinMax = ref(hsParams.value.surface);\n\n    return {\n        params,\n        hsParams,\n        defaultFilters,\n        defaultStatus,\n        status,\n        surfaceMinMax\n    }\n\n});","import { defineStore } from \"pinia\";\n\nimport html2canvas from \"html2canvas\";\n\nimport { ref } from \"vue\";\n\nexport const useCaptureStore = defineStore('screenshot' , () => {\n    \n    const currentImage = ref(\"\");\n    const captureLink = ref(\"\");\n    const isLoading = ref(false);\n    const errorCapture = ref(false);\n    const isOpenModal = ref(false);\n\n    const element = ref(HTMLElement);\n\n    function takeScreen(elem){\n        element.value = elem;\n        capture();\n    }\n\n    function capture() {\n        isLoading.value = true;\n        errorCapture.value = false;\n        currentImage.value = \"\";\n        isOpenModal.value = true;\n        window.setTimeout(() => {\n            const elem = element.value;\n            html2canvas(elem,\n                {\n                    allowTaint: true,\n                    useCORS: false,\n                    height: elem.offsetHeight,\n                    width: elem.offsetWidth,\n                }\n            ).then(function (canvas) {\n                isLoading.value = false;\n                const dataUrl = canvas.toDataURL(\"image/jpeg\");\n                currentImage.value = dataUrl;\n                captureLink.value = dataUrl;\n            }).catch(() => {\n                isLoading.value = false;\n                errorCapture.value = true;\n            });\n        } , 500);\n        \n    }\n\n    return {\n        currentImage,\n        captureLink,\n        isLoading,\n        errorCapture,\n        element,\n        isOpenModal,\n        takeScreen,\n        capture\n    }\n})","import { defineStore , storeToRefs } from 'pinia';\nimport { useAuthStore } from \"@/stores/auth\";\nimport { useAppDataStore } from \"@/stores/appData\";\n\nimport { ref , computed } from \"vue\";\nimport axios from \"axios\";\nimport { useRouter } from \"vue-router\";\n\nimport regionsData from \"@/assets/regions.json\";\n\n\nexport const useRegionsStore = defineStore('regions', () => {\n\n    const authStore = useAuthStore();\n\n    const appDataStore = useAppDataStore();\n\n    const {params , hsParams , defaultFilters} = storeToRefs(appDataStore);\n    \n    const router = useRouter();\n\n    const regions = ref({});\n    const filteredRegions = ref({});\n    const regionId = ref(\"\");\n    const currentRegion = ref({});\n    const currentType = ref(\"\");\n    const colorTypes = ref(hsParams.value.color_types);\n    const orbitalParams = params.value;\n    const isError = ref(false);\n    const firstFetch = ref(true);\n\n\n    const body__infos = computed(() => {\n        if(!Object.keys(currentRegion).length) return {}\n        return {\n            Surface: currentRegion.value.surface + \"m²\",\n            Type: currentRegion.value.type,\n            Etage: currentRegion.value.etage,\n            Terrasse: currentRegion.value.terrasse + \"m²\",\n            Code: currentRegion.value.code_ref,\n        }\n    });\n\n\n    const appt = computed(() => {\n        const a = currentRegion.value.appt;\n        return _2digits(a);\n    });\n    const bloc = computed(() => {\n        const a = currentRegion.value.bloc;\n        return _2digits(a);\n    });\n    const etage = computed(() => {\n        const a = currentRegion.value.etage;\n        return _2digits(a);\n    });\n\n    const region = computed(() => {\n        if(Object.keys(regions.value).length) {\n            const reg = regions.value[regionId.value];\n            currentRegion.value = reg;\n            return reg;\n        }\n        return undefined;\n    });\n\n    const currentColor = computed(() => {\n        if(Object.keys(colorTypes.value).length) {\n            return colorTypes.value[currentType.value];\n        }\n        return undefined;\n    });\n\n    function _2digits(num) {\n        const prefix = (num <= 9) ? \"0\" : \"\";\n        return prefix + num;\n    }\n\n\n    function setRegion(id){\n        regionId.value = id;\n        currentRegion.value = regions.value[id];\n        currentType.value = currentRegion.value.type;\n    }\n\n    async function fetchRegions() {\n\n        regions.value = regionsData; //testing\n        /* try {\n            const res = await axios.request({\n                url: '/get-regions',\n                method: 'GET',\n                baseURL: process.env.VUE_APP_API_BASE_URL,\n            });\n            regions.value = res.data.data.regions;\n            firstFetch.value = false;\n            isError.value = false;\n        } catch (err) {\n            isError.value = true;\n            const error = err.response.data;\n            if (error === undefined) return err.message;\n            return error.message || err.response.statusText || err.message;\n        } */\n    }\n\n    async function fetchAuthRegions() { \n        try {\n            const token = authStore.getToken();\n            const res = await axios.request({\n                url: '/list-appt',\n                method: 'GET',\n                baseURL: process.env.VUE_APP_API_BASE_URL,\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n            regions.value = res.data.data.regions;\n            firstFetch.value = false;\n            isError.value = false;\n            authStore.isAdmin = true;\n        } catch (e) {\n            //const error = e.response.data;\n            //const err = error ? error : e.message;\n            isError.value = true;\n            authStore.isAdmin = false;\n            router.push('login');\n        }\n    }\n\n    async function editStatus(id , status) {\n        try {\n            const token = authStore.getToken();\n            const response = await axios.post(`${process.env.VUE_APP_API_BASE_URL}/edit-appt`, {\n                id,\n                status: status\n            }, {\n                headers: {\n                    'content-type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n            const res = response.data;\n            regions.value = res.data.regions;\n            isError.value = false;\n            return res.message;\n    \n        } catch (err) {\n            isError.value = true;\n            const error = err.response.data;\n            if (error === undefined) return err.message;\n            return error.message;\n        }\n    }\n\n\n\n\n    /**\n     * Filter regions by given filters\n     * @param {Object} filters \n     */\n    function filterRegions(filters){\n        filteredRegions.value = Object.fromEntries(\n            Object.entries(regions.value).filter(item => {\n                const v = item[1];\n                const surface = v.surface;\n                const type = v.type;\n                const stage = v.etage;\n                const status = v.statut;\n                return _isValide(filters, surface, type, stage, status);\n            })\n        );\n    }\n    function _isValide(filters , surface, type, stage, status) {\n        return (\n            _isValideSurface(filters , surface) &&\n            filters.types.includes(type) &&\n            filters.stages.includes(Number(stage)) &&\n            filters.status.includes(status)\n        );\n    }\n    \n    function _isValideSurface(filters , surface) {\n        if (!filters.surface) return true;\n        return (surface >= filters.surface.min && surface <= filters.surface.max)\n    }\n\n\n  \n    return { \n        firstFetch,\n        regions ,\n        filteredRegions,\n        regionId,\n        currentRegion , \n        region,\n        body__infos, \n        appt , \n        bloc , \n        etage , \n        colorTypes,\n        defaultFilters,\n        orbitalParams,\n        currentColor,\n        isError,\n        fetchRegions, \n        fetchAuthRegions,\n        editStatus,\n        setRegion,\n        filterRegions\n    }\n});\n\n\n\n","class ColorsHelper {\n\n    constructor () {\n\n    }\n\n    /**\n     * \n     * @param {Object} color - the color object\n     * @param {Number} color.red - red value 0-255\n     * @param {Number} color.green - red value 0-255\n     * @param {Number} color.blue - red value 0-255\n     * @returns {String} string color \n     * @example // return \"c(331287)\"\n     */\n    getColorString(color) {\n        const colorString = `c(${color.red}, ${color.green}, ${color.blue})`;\n        return colorString;\n    }\n\n    /**\n     * return the fill color to be drawn in RGBA format\n     * @param {Object} color - the color object\n     * @param {Number} color.red - red value 0-255\n     * @param {Number} color.green - red value 0-255\n     * @param {Number} color.blue - red value 0-255\n     * @param {Number} color.alpha - opacity 0-1\n     * @returns RGBA color\n     */\n    getColorFill(color , alpha) {\n        const c = `rgba(${color.red}, ${color.green}, ${color.blue} , ${alpha})`;\n        return c;\n    }\n\n\n    /**\n     * \n     * @param {Array<String>} colorSet the color set containing the unique colors to be compared\n     * @param {Boolean} rgb - bool indicating if color is in RGB OR HEX format\n     * @returns {String} unique color\n     */\n    getUniqColor (colorSet , rgb = true) {\n        let size = colorSet.size; // old set Size\n        while(colorSet.size < (size + 10) ) {\n            let newColor = this._generateRandHexColor();\n            if(!colorSet.has(newColor) && newColor !== \"#000000\"){\n                //colorSet.add(newColor);\n                \n                const color = rgb ? newColor : this._hexToRgb(newColor);\n                return color;\n            }\n        }\n    }\n\n    /**\n     * convert HEX color Format to RGBA Object Color Format\n     * @param {String} hex - HEX color string\n     * @returns {Object} rgba color object.\n     * @example // return {red : 10 , green : 10 , blue : 10}\n     */\n    hexToRgb(hex){\n        let c;\n        let rgb = {};\n\n        //if is a valid HEX color\n        if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)){\n            c= hex.substring(1).split('');\n            if(c.length== 3){\n                c= [c[0], c[0], c[1], c[1], c[2], c[2]];\n            }\n            c= '0x'+c.join('');\n            rgb = {\n                red : (c>>16)&255,\n                green : (c>>8)&255,\n                blue : c&255,\n            }\n\n            return rgb;\n\n            //return 'rgba('+[(c>>16)&255, (c>>8)&255, c&255].join(',')+',1)';\n        }\n        throw new Error('Bad Hex color given');\n    }\n\n    _generateRandHexColor() {\n\n        const hex = ['a', 'b', 'c', 'd', 'e', 'f', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n        let color = '#';\n        // we will generate hex color with 6 digit length\n        for (var i = 0; i < 6; i++) {\n            let index = this._rand(0,15);\n        // Append hex value at the index\n        color += hex[index];\n        }\n        return color;\n    }\n\n    _rand(min, max) {\n        let randomNum = Math.random() * (max - min) + min;\n        return Math.round(randomNum);\n    }\n\n    \n\n    \n}\n\n\n\n\n\n\n\n\n\n\nimport axios from 'axios'\nimport xml2js from 'xml2js'\nclass XmlManager {\n\n    constructor(fileName) {\n\n        this.fileName = fileName;\n        this.xmlData;\n        this.isLoaded = false;\n\n    }\n\n\n    getHotspots(){\n        return this.xmlData.vrobject.hotspots[0].polyhotspot;\n    }\n\n    loadXmlData(onLoad) {\n        axios.get(this.fileName)\n        .then(response => {\n            this._parseXML(response.data)  \n            .then((data) => {\n                this.xmlData = data;\n                onLoad();\n            });\n        }).catch((e) => {\n            console.log(e);\n            window.dispatchEvent(new CustomEvent(\"OnError\", {\n                bubbles: false\n            }));\n        });\n    }\n\n\n    _parseXML(data) {  \n        return  new Promise(resolve => { \n            const parser = new xml2js.Parser(  \n            {  \n                trim: true,  \n                explicitArray: true,\n                preserveChildrenOrder : true,\n            });\n            parser.parseString(data, function (err , result) {\n                resolve(result);\n            });\n        });\n    }\n    \n}\n\n\nconst COLOR_HELPER = new ColorsHelper();\n\n\nexport {COLOR_HELPER , XmlManager}","import { gsap } from \"gsap\";\n\n\nfunction transitionEnter(el) {\n    const carousel = el.getElementsByClassName(\"hs-more-carousel\")[0];\n    const infos = el.getElementsByClassName(\"hs-more-infos\")[0];\n    const infosList = el.getElementsByClassName(\"infos-list\");\n    const dispo = el.getElementsByClassName(\"row-dispo\")[0];\n    const closeBtn = el.getElementsByClassName(\"close-detail\")[0];\n    const camera = el.getElementsByClassName(\"more-footer\")[0];\n\n    const timeline = gsap.timeline({\n        repeat: 0 ,\n    });\n\n\n    timeline.set(el , {overflow : \"hidden\"});\n\n    timeline.set(carousel , {\n        autoAlpha : 0,\n        scale : .95,\n    });\n    timeline.set(infos , {\n        autoAlpha : 0,\n        x : \"100%\"\n    });\n\n    timeline.set(closeBtn , {\n        x : \"30%\",\n        autoAlpha : 0\n    });\n\n    timeline.set(camera , {\n        y : \"30%\",\n        autoAlpha : 0\n    });\n\n\n\n\n    timeline.fromTo(el, { autoAlpha: 0 }, {\n        autoAlpha: 1,\n        duration: 0.3,\n    });\n\n    timeline.to(infos , {\n        autoAlpha : 1,\n        x : \"0\",\n        duration : 0.7,\n        ease : \"power4.out\",\n        onComplete : () => timeline.set(el , {overflow : \"initial\"})\n    });\n\n    timeline.from(infosList , {\n        autoAlpha : 0,\n        y : \"40\",\n        duration : 0.5,\n        stagger : 0.1,\n        ease : \"power4.out\"\n    } , \"<+=0.2\");\n\n    timeline.from(dispo , {\n        autoAlpha : 0,\n        scale : .4,\n        duration : 0.4,\n        ease : \"back.out(1.7)\"\n    } , \"-=0.2\");\n    \n\n    timeline.to(carousel , {\n        autoAlpha : 1,\n        scale : 1,\n        duration : .6,\n        ease : \"power4.out\"\n    }  , \"-=0.6\");\n\n    timeline.to(closeBtn , {\n        autoAlpha : 1,\n        x : 0,\n        duration : .6,\n        ease : \"back.out(4)\"\n    });\n\n    timeline.to(camera , {\n        autoAlpha : 1,\n        y : 0,\n        duration : .5,\n        ease : \"back.out(4)\"\n    }, \"<\");\n    \n\n}\n\nfunction transitionLeave(el, done) {\n    const infos = el.getElementsByClassName(\"hs-more-infos\")[0];\n    const carousel = el.getElementsByClassName(\"hs-more-carousel\")[0];\n\n    const timeline = gsap.timeline({\n        repeat: 0\n    });\n\n    timeline.set(el , {overflow : \"hidden\"});\n\n    timeline.to(carousel, {\n        autoAlpha: 0,\n        duration: 0.4,\n    });\n    \n    timeline.to(infos , {\n        autoAlpha : 0,\n        x : \"100%\",\n        duration : 0.4,\n        ease : \"power4.in\"\n    } , \"-=0.2\");\n\n    timeline.to(el, {\n        autoAlpha: 0,\n        duration: 0.2,\n        delay : .5,\n        onComplete : done\n    }, \"-=0.5\");\n}\n\n\n\nexport {transitionEnter , transitionLeave}"],"names":["useAppDataStore","defineStore","params","ref","APP_DATA","hsParams","defaultFilters","value","default_filters","defaultStatus","status","surfaceMinMax","surface","useCaptureStore","currentImage","captureLink","isLoading","errorCapture","isOpenModal","element","HTMLElement","takeScreen","elem","capture","window","setTimeout","html2canvas","allowTaint","useCORS","height","offsetHeight","width","offsetWidth","then","canvas","dataUrl","toDataURL","catch","useRegionsStore","authStore","useAuthStore","appDataStore","storeToRefs","router","useRouter","regions","filteredRegions","regionId","currentRegion","currentType","colorTypes","color_types","orbitalParams","isError","firstFetch","body__infos","computed","Object","keys","length","Surface","Type","type","Etage","etage","Terrasse","terrasse","Code","code_ref","appt","a","_2digits","bloc","region","reg","currentColor","num","prefix","setRegion","id","async","fetchRegions","regionsData","fetchAuthRegions","token","getToken","res","axios","url","method","baseURL","process","headers","data","isAdmin","e","push","editStatus","response","message","err","error","undefined","filterRegions","filters","fromEntries","entries","filter","item","v","stage","statut","_isValide","_isValideSurface","types","includes","stages","Number","min","max","ColorsHelper","constructor","getColorString","color","colorString","red","green","blue","getColorFill","alpha","c","getUniqColor","colorSet","rgb","size","newColor","this","_generateRandHexColor","has","_hexToRgb","hexToRgb","hex","test","substring","split","join","Error","i","index","_rand","randomNum","Math","random","round","XmlManager","fileName","xmlData","isLoaded","getHotspots","vrobject","hotspots","polyhotspot","loadXmlData","onLoad","_parseXML","console","log","dispatchEvent","CustomEvent","bubbles","Promise","resolve","parser","xml2js","trim","explicitArray","preserveChildrenOrder","parseString","result","COLOR_HELPER","transitionEnter","el","carousel","getElementsByClassName","infos","infosList","dispo","closeBtn","camera","timeline","gsap","repeat","set","overflow","autoAlpha","scale","x","y","fromTo","duration","to","ease","onComplete","from","stagger","transitionLeave","done","delay"],"sourceRoot":""}